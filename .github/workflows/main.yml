name: Main To-Do-List Flask workflow

on:
  push:
    branches:
      - '**'

jobs:
  to_do_list_test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout репозитория
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Установка Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # 3. Создание .env файла
      - name: Create .env file
        run: |
          echo "FLASK_DEBUG=True" >> config/.env
          echo "FLASK_SECRET_KEY='FLASK_SECRET_KEY'" >> config/.env
          echo "JWT_ACCESS_SECRET_KEY='JWT_ACCESS_SECRET_KEY'" >> config/.env
          echo "JWT_REFRESH_SECRET_KEY='JWT_REFRESH_SECRET_KEY'" >> config/.env
          echo "POSTGRES_DB=tasks" >> config/.env
          echo "POSTGRES_PASSWORD=postgres" >> config/.env
          echo "POSTGRES_USER=postgres" >> config/.env
          echo "POSTGRES_HOST=db" >> config/.env
          echo "POSTGRES_PORT=5432" >> config/.env

      # 4. Запуск Docker Compose и тестов
      - name: Start services with Docker Compose
        run: |
          docker compose -p to-do-list-flask-pytest -f docker-compose-pytest.yml run --build -e PYTHONPATH=./app --rm api pytest && docker compose -p to-do-list-flask-pytest -f docker-compose-pytest.yml down -v || (docker compose -p to-do-list-flask-pytest -f docker-compose-pytest.yml down -v && exit 1)  

  build_to-do-list_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: to_do_list_test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./docker/prod/api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/to-do-list-flask:latest
